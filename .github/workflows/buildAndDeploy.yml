# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build and deploy

on: push
#  push:
#    branches:    
#      - '*'         # matches every branch that doesn't contain a '/'
#      - '*/*'       # matches every branch containing a single '/'
#      - '**'        # matches every branch
#      - '!master'   # excludes master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: 5.1
        arguments: shadowJar
    - uses: nelonoel/branch-name@v1
    - name: Prepare
      id: prepare
      run: |
        DOCKER_IMAGE=tinyangrykitten/${BRANCH_NAME}
        DOCKER_PLATFORMS=linux/amd64,linux/arm/v7,linux/arm64
        VERSION=latest
        TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
        echo ::set-output name=docker_image::${DOCKER_IMAGE}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
          --build-arg VERSION=${VERSION} \
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg VCS_REF=${GITHUB_SHA::8} \
          ${TAGS} --file ./Dockerfile ./
    - name: Set up Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v3
    - name: Docker Buildx (build)
      run: |
        docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
    - name: Docker Login
      if: success()
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
    - name: Docker Buildx (push)
      if: success()
      run: |
        docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
